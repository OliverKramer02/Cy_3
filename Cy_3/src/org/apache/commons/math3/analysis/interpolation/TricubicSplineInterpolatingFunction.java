/*   1:    */ package org.apache.commons.math3.analysis.interpolation;
/*   2:    */ 
/*   3:    */ import org.apache.commons.math3.analysis.TrivariateFunction;
/*   4:    */ import org.apache.commons.math3.exception.DimensionMismatchException;
/*   5:    */ import org.apache.commons.math3.exception.NoDataException;
/*   6:    */ import org.apache.commons.math3.exception.OutOfRangeException;
/*   7:    */ import org.apache.commons.math3.util.MathArrays;
/*   8:    */ 
/*   9:    */ public class TricubicSplineInterpolatingFunction
/*  10:    */   implements TrivariateFunction
/*  11:    */ {
/*  12: 44 */   private static final double[][] AINV = { { 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -3.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 9.0D, -9.0D, -9.0D, 9.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, 3.0D, -6.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, -6.0D, 3.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, 2.0D, 2.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -6.0D, 6.0D, 6.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, -3.0D, 3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, 4.0D, -2.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -2.0D, -1.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 2.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -6.0D, 6.0D, 6.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, -2.0D, 4.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 4.0D, -4.0D, -4.0D, 4.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 2.0D, -2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 9.0D, -9.0D, -9.0D, 9.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, 3.0D, -6.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, -6.0D, 3.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, 2.0D, 2.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -6.0D, 6.0D, 6.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, -3.0D, 3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, 4.0D, -2.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -2.0D, -1.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -6.0D, 6.0D, 6.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, -2.0D, 4.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, -4.0D, -4.0D, 4.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 2.0D, -2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -3.0D, 0.0D, 0.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, 0.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 9.0D, -9.0D, 0.0D, 0.0D, -9.0D, 9.0D, 0.0D, 0.0D, 6.0D, 3.0D, 0.0D, 0.0D, -6.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, -6.0D, 0.0D, 0.0D, 3.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, 2.0D, 0.0D, 0.0D, 2.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -6.0D, 6.0D, 0.0D, 0.0D, 6.0D, -6.0D, 0.0D, 0.0D, -3.0D, -3.0D, 0.0D, 0.0D, 3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, 4.0D, 0.0D, 0.0D, -2.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -2.0D, 0.0D, 0.0D, -1.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, 0.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, 0.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 9.0D, -9.0D, 0.0D, 0.0D, -9.0D, 9.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, 3.0D, 0.0D, 0.0D, -6.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, -6.0D, 0.0D, 0.0D, 3.0D, -3.0D, 0.0D, 0.0D, 4.0D, 2.0D, 0.0D, 0.0D, 2.0D, 1.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -6.0D, 6.0D, 0.0D, 0.0D, 6.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, -3.0D, 0.0D, 0.0D, 3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, 4.0D, 0.0D, 0.0D, -2.0D, 2.0D, 0.0D, 0.0D, -2.0D, -2.0D, 0.0D, 0.0D, -1.0D, -1.0D, 0.0D, 0.0D }, { 9.0D, 0.0D, -9.0D, 0.0D, -9.0D, 0.0D, 9.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, 0.0D, 3.0D, 0.0D, -6.0D, 0.0D, -3.0D, 0.0D, 6.0D, 0.0D, -6.0D, 0.0D, 3.0D, 0.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, 0.0D, 2.0D, 0.0D, 2.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 9.0D, 0.0D, -9.0D, 0.0D, -9.0D, 0.0D, 9.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 6.0D, 0.0D, 3.0D, 0.0D, -6.0D, 0.0D, -3.0D, 0.0D, 6.0D, 0.0D, -6.0D, 0.0D, 3.0D, 0.0D, -3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, 0.0D, 2.0D, 0.0D, 2.0D, 0.0D, 1.0D, 0.0D }, { -27.0D, 27.0D, 27.0D, -27.0D, 27.0D, -27.0D, -27.0D, 27.0D, -18.0D, -9.0D, 18.0D, 9.0D, 18.0D, 9.0D, -18.0D, -9.0D, -18.0D, 18.0D, -9.0D, 9.0D, 18.0D, -18.0D, 9.0D, -9.0D, -18.0D, 18.0D, 18.0D, -18.0D, -9.0D, 9.0D, 9.0D, -9.0D, -12.0D, -6.0D, -6.0D, -3.0D, 12.0D, 6.0D, 6.0D, 3.0D, -12.0D, -6.0D, 12.0D, 6.0D, -6.0D, -3.0D, 6.0D, 3.0D, -12.0D, 12.0D, -6.0D, 6.0D, -6.0D, 6.0D, -3.0D, 3.0D, -8.0D, -4.0D, -4.0D, -2.0D, -4.0D, -2.0D, -2.0D, -1.0D }, { 18.0D, -18.0D, -18.0D, 18.0D, -18.0D, 18.0D, 18.0D, -18.0D, 9.0D, 9.0D, -9.0D, -9.0D, -9.0D, -9.0D, 9.0D, 9.0D, 12.0D, -12.0D, 6.0D, -6.0D, -12.0D, 12.0D, -6.0D, 6.0D, 12.0D, -12.0D, -12.0D, 12.0D, 6.0D, -6.0D, -6.0D, 6.0D, 6.0D, 6.0D, 3.0D, 3.0D, -6.0D, -6.0D, -3.0D, -3.0D, 6.0D, 6.0D, -6.0D, -6.0D, 3.0D, 3.0D, -3.0D, -3.0D, 8.0D, -8.0D, 4.0D, -4.0D, 4.0D, -4.0D, 2.0D, -2.0D, 4.0D, 4.0D, 2.0D, 2.0D, 2.0D, 2.0D, 1.0D, 1.0D }, { -6.0D, 0.0D, 6.0D, 0.0D, 6.0D, 0.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 3.0D, 0.0D, -4.0D, 0.0D, 4.0D, 0.0D, -2.0D, 0.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -6.0D, 0.0D, 6.0D, 0.0D, 6.0D, 0.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 3.0D, 0.0D, -4.0D, 0.0D, 4.0D, 0.0D, -2.0D, 0.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, -1.0D, 0.0D }, { 18.0D, -18.0D, -18.0D, 18.0D, -18.0D, 18.0D, 18.0D, -18.0D, 12.0D, 6.0D, -12.0D, -6.0D, -12.0D, -6.0D, 12.0D, 6.0D, 9.0D, -9.0D, 9.0D, -9.0D, -9.0D, 9.0D, -9.0D, 9.0D, 12.0D, -12.0D, -12.0D, 12.0D, 6.0D, -6.0D, -6.0D, 6.0D, 6.0D, 3.0D, 6.0D, 3.0D, -6.0D, -3.0D, -6.0D, -3.0D, 8.0D, 4.0D, -8.0D, -4.0D, 4.0D, 2.0D, -4.0D, -2.0D, 6.0D, -6.0D, 6.0D, -6.0D, 3.0D, -3.0D, 3.0D, -3.0D, 4.0D, 2.0D, 4.0D, 2.0D, 2.0D, 1.0D, 2.0D, 1.0D }, { -12.0D, 12.0D, 12.0D, -12.0D, 12.0D, -12.0D, -12.0D, 12.0D, -6.0D, -6.0D, 6.0D, 6.0D, 6.0D, 6.0D, -6.0D, -6.0D, -6.0D, 6.0D, -6.0D, 6.0D, 6.0D, -6.0D, 6.0D, -6.0D, -8.0D, 8.0D, 8.0D, -8.0D, -4.0D, 4.0D, 4.0D, -4.0D, -3.0D, -3.0D, -3.0D, -3.0D, 3.0D, 3.0D, 3.0D, 3.0D, -4.0D, -4.0D, 4.0D, 4.0D, -2.0D, -2.0D, 2.0D, 2.0D, -4.0D, 4.0D, -4.0D, 4.0D, -2.0D, 2.0D, -2.0D, 2.0D, -2.0D, -2.0D, -2.0D, -2.0D, -1.0D, -1.0D, -1.0D, -1.0D }, { 2.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { -6.0D, 6.0D, 0.0D, 0.0D, 6.0D, -6.0D, 0.0D, 0.0D, -4.0D, -2.0D, 0.0D, 0.0D, 4.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 4.0D, -4.0D, 0.0D, 0.0D, -4.0D, 4.0D, 0.0D, 0.0D, 2.0D, 2.0D, 0.0D, 0.0D, -2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -6.0D, 6.0D, 0.0D, 0.0D, 6.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, -2.0D, 0.0D, 0.0D, 4.0D, 2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, -3.0D, 3.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D, -2.0D, -1.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, -4.0D, 0.0D, 0.0D, -4.0D, 4.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 2.0D, 0.0D, 0.0D, -2.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 2.0D, -2.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D, 1.0D, 1.0D, 0.0D, 0.0D }, { -6.0D, 0.0D, 6.0D, 0.0D, 6.0D, 0.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, 0.0D, -2.0D, 0.0D, 4.0D, 0.0D, 2.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -6.0D, 0.0D, 6.0D, 0.0D, 6.0D, 0.0D, -6.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -4.0D, 0.0D, -2.0D, 0.0D, 4.0D, 0.0D, 2.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, -3.0D, 0.0D, 3.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D, -2.0D, 0.0D, -1.0D, 0.0D }, { 18.0D, -18.0D, -18.0D, 18.0D, -18.0D, 18.0D, 18.0D, -18.0D, 12.0D, 6.0D, -12.0D, -6.0D, -12.0D, -6.0D, 12.0D, 6.0D, 12.0D, -12.0D, 6.0D, -6.0D, -12.0D, 12.0D, -6.0D, 6.0D, 9.0D, -9.0D, -9.0D, 9.0D, 9.0D, -9.0D, -9.0D, 9.0D, 8.0D, 4.0D, 4.0D, 2.0D, -8.0D, -4.0D, -4.0D, -2.0D, 6.0D, 3.0D, -6.0D, -3.0D, 6.0D, 3.0D, -6.0D, -3.0D, 6.0D, -6.0D, 3.0D, -3.0D, 6.0D, -6.0D, 3.0D, -3.0D, 4.0D, 2.0D, 2.0D, 1.0D, 4.0D, 2.0D, 2.0D, 1.0D }, { -12.0D, 12.0D, 12.0D, -12.0D, 12.0D, -12.0D, -12.0D, 12.0D, -6.0D, -6.0D, 6.0D, 6.0D, 6.0D, 6.0D, -6.0D, -6.0D, -8.0D, 8.0D, -4.0D, 4.0D, 8.0D, -8.0D, 4.0D, -4.0D, -6.0D, 6.0D, 6.0D, -6.0D, -6.0D, 6.0D, 6.0D, -6.0D, -4.0D, -4.0D, -2.0D, -2.0D, 4.0D, 4.0D, 2.0D, 2.0D, -3.0D, -3.0D, 3.0D, 3.0D, -3.0D, -3.0D, 3.0D, 3.0D, -4.0D, 4.0D, -2.0D, 2.0D, -4.0D, 4.0D, -2.0D, 2.0D, -2.0D, -2.0D, -1.0D, -1.0D, -2.0D, -2.0D, -1.0D, -1.0D }, { 4.0D, 0.0D, -4.0D, 0.0D, -4.0D, 0.0D, 4.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, -2.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D }, { 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 4.0D, 0.0D, -4.0D, 0.0D, -4.0D, 0.0D, 4.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 2.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, -2.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 2.0D, 0.0D, -2.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D, 1.0D, 0.0D }, { -12.0D, 12.0D, 12.0D, -12.0D, 12.0D, -12.0D, -12.0D, 12.0D, -8.0D, -4.0D, 8.0D, 4.0D, 8.0D, 4.0D, -8.0D, -4.0D, -6.0D, 6.0D, -6.0D, 6.0D, 6.0D, -6.0D, 6.0D, -6.0D, -6.0D, 6.0D, 6.0D, -6.0D, -6.0D, 6.0D, 6.0D, -6.0D, -4.0D, -2.0D, -4.0D, -2.0D, 4.0D, 2.0D, 4.0D, 2.0D, -4.0D, -2.0D, 4.0D, 2.0D, -4.0D, -2.0D, 4.0D, 2.0D, -3.0D, 3.0D, -3.0D, 3.0D, -3.0D, 3.0D, -3.0D, 3.0D, -2.0D, -1.0D, -2.0D, -1.0D, -2.0D, -1.0D, -2.0D, -1.0D }, { 8.0D, -8.0D, -8.0D, 8.0D, -8.0D, 8.0D, 8.0D, -8.0D, 4.0D, 4.0D, -4.0D, -4.0D, -4.0D, -4.0D, 4.0D, 4.0D, 4.0D, -4.0D, 4.0D, -4.0D, -4.0D, 4.0D, -4.0D, 4.0D, 4.0D, -4.0D, -4.0D, 4.0D, 4.0D, -4.0D, -4.0D, 4.0D, 2.0D, 2.0D, 2.0D, 2.0D, -2.0D, -2.0D, -2.0D, -2.0D, 2.0D, 2.0D, -2.0D, -2.0D, 2.0D, 2.0D, -2.0D, -2.0D, 2.0D, -2.0D, 2.0D, -2.0D, 2.0D, -2.0D, 2.0D, -2.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D, 1.0D } };
/*  13:    */   private final double[] xval;
/*  14:    */   private final double[] yval;
/*  15:    */   private final double[] zval;
/*  16:    */   private final TricubicSplineFunction[][][] splines;
/*  17:    */   
/*  18:    */   public TricubicSplineInterpolatingFunction(double[] x, double[] y, double[] z, double[][][] f, double[][][] dFdX, double[][][] dFdY, double[][][] dFdZ, double[][][] d2FdXdY, double[][][] d2FdXdZ, double[][][] d2FdYdZ, double[][][] d3FdXdYdZ)
/*  19:    */   {
/*  20:156 */     int xLen = x.length;
/*  21:157 */     int yLen = y.length;
/*  22:158 */     int zLen = z.length;
/*  23:160 */     if ((xLen == 0) || (yLen == 0) || (z.length == 0) || (f.length == 0) || (f[0].length == 0)) {
/*  24:161 */       throw new NoDataException();
/*  25:    */     }
/*  26:163 */     if (xLen != f.length) {
/*  27:164 */       throw new DimensionMismatchException(xLen, f.length);
/*  28:    */     }
/*  29:166 */     if (xLen != dFdX.length) {
/*  30:167 */       throw new DimensionMismatchException(xLen, dFdX.length);
/*  31:    */     }
/*  32:169 */     if (xLen != dFdY.length) {
/*  33:170 */       throw new DimensionMismatchException(xLen, dFdY.length);
/*  34:    */     }
/*  35:172 */     if (xLen != dFdZ.length) {
/*  36:173 */       throw new DimensionMismatchException(xLen, dFdZ.length);
/*  37:    */     }
/*  38:175 */     if (xLen != d2FdXdY.length) {
/*  39:176 */       throw new DimensionMismatchException(xLen, d2FdXdY.length);
/*  40:    */     }
/*  41:178 */     if (xLen != d2FdXdZ.length) {
/*  42:179 */       throw new DimensionMismatchException(xLen, d2FdXdZ.length);
/*  43:    */     }
/*  44:181 */     if (xLen != d2FdYdZ.length) {
/*  45:182 */       throw new DimensionMismatchException(xLen, d2FdYdZ.length);
/*  46:    */     }
/*  47:184 */     if (xLen != d3FdXdYdZ.length) {
/*  48:185 */       throw new DimensionMismatchException(xLen, d3FdXdYdZ.length);
/*  49:    */     }
/*  50:188 */     MathArrays.checkOrder(x);
/*  51:189 */     MathArrays.checkOrder(y);
/*  52:190 */     MathArrays.checkOrder(z);
/*  53:    */     
/*  54:192 */     this.xval = ((double[])x.clone());
/*  55:193 */     this.yval = ((double[])y.clone());
/*  56:194 */     this.zval = ((double[])z.clone());
/*  57:    */     
/*  58:196 */     int lastI = xLen - 1;
/*  59:197 */     int lastJ = yLen - 1;
/*  60:198 */     int lastK = zLen - 1;
/*  61:199 */     this.splines = new TricubicSplineFunction[lastI][lastJ][lastK];
/*  62:201 */     for (int i = 0; i < lastI; i++)
/*  63:    */     {
/*  64:202 */       if (f[i].length != yLen) {
/*  65:203 */         throw new DimensionMismatchException(f[i].length, yLen);
/*  66:    */       }
/*  67:205 */       if (dFdX[i].length != yLen) {
/*  68:206 */         throw new DimensionMismatchException(dFdX[i].length, yLen);
/*  69:    */       }
/*  70:208 */       if (dFdY[i].length != yLen) {
/*  71:209 */         throw new DimensionMismatchException(dFdY[i].length, yLen);
/*  72:    */       }
/*  73:211 */       if (dFdZ[i].length != yLen) {
/*  74:212 */         throw new DimensionMismatchException(dFdZ[i].length, yLen);
/*  75:    */       }
/*  76:214 */       if (d2FdXdY[i].length != yLen) {
/*  77:215 */         throw new DimensionMismatchException(d2FdXdY[i].length, yLen);
/*  78:    */       }
/*  79:217 */       if (d2FdXdZ[i].length != yLen) {
/*  80:218 */         throw new DimensionMismatchException(d2FdXdZ[i].length, yLen);
/*  81:    */       }
/*  82:220 */       if (d2FdYdZ[i].length != yLen) {
/*  83:221 */         throw new DimensionMismatchException(d2FdYdZ[i].length, yLen);
/*  84:    */       }
/*  85:223 */       if (d3FdXdYdZ[i].length != yLen) {
/*  86:224 */         throw new DimensionMismatchException(d3FdXdYdZ[i].length, yLen);
/*  87:    */       }
/*  88:227 */       int ip1 = i + 1;
/*  89:228 */       for (int j = 0; j < lastJ; j++)
/*  90:    */       {
/*  91:229 */         if (f[i][j].length != zLen) {
/*  92:230 */           throw new DimensionMismatchException(f[i][j].length, zLen);
/*  93:    */         }
/*  94:232 */         if (dFdX[i][j].length != zLen) {
/*  95:233 */           throw new DimensionMismatchException(dFdX[i][j].length, zLen);
/*  96:    */         }
/*  97:235 */         if (dFdY[i][j].length != zLen) {
/*  98:236 */           throw new DimensionMismatchException(dFdY[i][j].length, zLen);
/*  99:    */         }
/* 100:238 */         if (dFdZ[i][j].length != zLen) {
/* 101:239 */           throw new DimensionMismatchException(dFdZ[i][j].length, zLen);
/* 102:    */         }
/* 103:241 */         if (d2FdXdY[i][j].length != zLen) {
/* 104:242 */           throw new DimensionMismatchException(d2FdXdY[i][j].length, zLen);
/* 105:    */         }
/* 106:244 */         if (d2FdXdZ[i][j].length != zLen) {
/* 107:245 */           throw new DimensionMismatchException(d2FdXdZ[i][j].length, zLen);
/* 108:    */         }
/* 109:247 */         if (d2FdYdZ[i][j].length != zLen) {
/* 110:248 */           throw new DimensionMismatchException(d2FdYdZ[i][j].length, zLen);
/* 111:    */         }
/* 112:250 */         if (d3FdXdYdZ[i][j].length != zLen) {
/* 113:251 */           throw new DimensionMismatchException(d3FdXdYdZ[i][j].length, zLen);
/* 114:    */         }
/* 115:254 */         int jp1 = j + 1;
/* 116:255 */         for (int k = 0; k < lastK; k++)
/* 117:    */         {
/* 118:256 */           int kp1 = k + 1;
/* 119:    */           
/* 120:258 */           double[] beta = { f[i][j][k], f[ip1][j][k], f[i][jp1][k], f[ip1][jp1][k], f[i][j][kp1], f[ip1][j][kp1], f[i][jp1][kp1], f[ip1][jp1][kp1], dFdX[i][j][k], dFdX[ip1][j][k], dFdX[i][jp1][k], dFdX[ip1][jp1][k], dFdX[i][j][kp1], dFdX[ip1][j][kp1], dFdX[i][jp1][kp1], dFdX[ip1][jp1][kp1], dFdY[i][j][k], dFdY[ip1][j][k], dFdY[i][jp1][k], dFdY[ip1][jp1][k], dFdY[i][j][kp1], dFdY[ip1][j][kp1], dFdY[i][jp1][kp1], dFdY[ip1][jp1][kp1], dFdZ[i][j][k], dFdZ[ip1][j][k], dFdZ[i][jp1][k], dFdZ[ip1][jp1][k], dFdZ[i][j][kp1], dFdZ[ip1][j][kp1], dFdZ[i][jp1][kp1], dFdZ[ip1][jp1][kp1], d2FdXdY[i][j][k], d2FdXdY[ip1][j][k], d2FdXdY[i][jp1][k], d2FdXdY[ip1][jp1][k], d2FdXdY[i][j][kp1], d2FdXdY[ip1][j][kp1], d2FdXdY[i][jp1][kp1], d2FdXdY[ip1][jp1][kp1], d2FdXdZ[i][j][k], d2FdXdZ[ip1][j][k], d2FdXdZ[i][jp1][k], d2FdXdZ[ip1][jp1][k], d2FdXdZ[i][j][kp1], d2FdXdZ[ip1][j][kp1], d2FdXdZ[i][jp1][kp1], d2FdXdZ[ip1][jp1][kp1], d2FdYdZ[i][j][k], d2FdYdZ[ip1][j][k], d2FdYdZ[i][jp1][k], d2FdYdZ[ip1][jp1][k], d2FdYdZ[i][j][kp1], d2FdYdZ[ip1][j][kp1], d2FdYdZ[i][jp1][kp1], d2FdYdZ[ip1][jp1][kp1], d3FdXdYdZ[i][j][k], d3FdXdYdZ[ip1][j][k], d3FdXdYdZ[i][jp1][k], d3FdXdYdZ[ip1][jp1][k], d3FdXdYdZ[i][j][kp1], d3FdXdYdZ[ip1][j][kp1], d3FdXdYdZ[i][jp1][kp1], d3FdXdYdZ[ip1][jp1][kp1] };
/* 121:    */           
/* 122:    */ 
/* 123:    */ 
/* 124:    */ 
/* 125:    */ 
/* 126:    */ 
/* 127:    */ 
/* 128:    */ 
/* 129:    */ 
/* 130:    */ 
/* 131:    */ 
/* 132:    */ 
/* 133:    */ 
/* 134:    */ 
/* 135:    */ 
/* 136:    */ 
/* 137:    */ 
/* 138:    */ 
/* 139:    */ 
/* 140:    */ 
/* 141:    */ 
/* 142:    */ 
/* 143:    */ 
/* 144:    */ 
/* 145:    */ 
/* 146:    */ 
/* 147:    */ 
/* 148:    */ 
/* 149:    */ 
/* 150:    */ 
/* 151:    */ 
/* 152:    */ 
/* 153:    */ 
/* 154:    */ 
/* 155:    */ 
/* 156:    */ 
/* 157:    */ 
/* 158:    */ 
/* 159:    */ 
/* 160:    */ 
/* 161:    */ 
/* 162:300 */           this.splines[i][j][k] = new TricubicSplineFunction(computeSplineCoefficients(beta));
/* 163:    */         }
/* 164:    */       }
/* 165:    */     }
/* 166:    */   }
/* 167:    */   
/* 168:    */   public double value(double x, double y, double z)
/* 169:    */   {
/* 170:310 */     int i = searchIndex(x, this.xval);
/* 171:311 */     if (i == -1) {
/* 172:312 */       throw new OutOfRangeException(Double.valueOf(x), Double.valueOf(this.xval[0]), Double.valueOf(this.xval[(this.xval.length - 1)]));
/* 173:    */     }
/* 174:314 */     int j = searchIndex(y, this.yval);
/* 175:315 */     if (j == -1) {
/* 176:316 */       throw new OutOfRangeException(Double.valueOf(y), Double.valueOf(this.yval[0]), Double.valueOf(this.yval[(this.yval.length - 1)]));
/* 177:    */     }
/* 178:318 */     int k = searchIndex(z, this.zval);
/* 179:319 */     if (k == -1) {
/* 180:320 */       throw new OutOfRangeException(Double.valueOf(z), Double.valueOf(this.zval[0]), Double.valueOf(this.zval[(this.zval.length - 1)]));
/* 181:    */     }
/* 182:323 */     double xN = (x - this.xval[i]) / (this.xval[(i + 1)] - this.xval[i]);
/* 183:324 */     double yN = (y - this.yval[j]) / (this.yval[(j + 1)] - this.yval[j]);
/* 184:325 */     double zN = (z - this.zval[k]) / (this.zval[(k + 1)] - this.zval[k]);
/* 185:    */     
/* 186:327 */     return this.splines[i][j][k].value(xN, yN, zN);
/* 187:    */   }
/* 188:    */   
/* 189:    */   private int searchIndex(double c, double[] val)
/* 190:    */   {
/* 191:338 */     if (c < val[0]) {
/* 192:339 */       return -1;
/* 193:    */     }
/* 194:342 */     int max = val.length;
/* 195:343 */     for (int i = 1; i < max; i++) {
/* 196:344 */       if (c <= val[i]) {
/* 197:345 */         return i - 1;
/* 198:    */       }
/* 199:    */     }
/* 200:349 */     return -1;
/* 201:    */   }
/* 202:    */   
/* 203:    */   private double[] computeSplineCoefficients(double[] beta)
/* 204:    */   {
/* 205:402 */     int sz = 64;
/* 206:403 */     double[] a = new double[64];
/* 207:405 */     for (int i = 0; i < 64; i++)
/* 208:    */     {
/* 209:406 */       double result = 0.0D;
/* 210:407 */       double[] row = AINV[i];
/* 211:408 */       for (int j = 0; j < 64; j++) {
/* 212:409 */         result += row[j] * beta[j];
/* 213:    */       }
/* 214:411 */       a[i] = result;
/* 215:    */     }
/* 216:414 */     return a;
/* 217:    */   }
/* 218:    */ }


/* Location:           C:\Users\Olli\Desktop\NetworkPrioritizer-1.01.jar
 * Qualified Name:     org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction
 * JD-Core Version:    0.7.0.1
 */